generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Provider {
  id   String @id @default(uuid())
  name String
  users User[]
}

model User {
  id          String   @id @default(uuid())
  name        String
  image       String
  email       String
  password    String
  createdAt   DateTime  @default(now())
  lastLoginAt DateTime  @default(now()) 
  providerId  String
  updatedAt   DateTime? 
  provider    Provider @relation(fields: [providerId], references: [id])

  members  Member[]
  messages Message[]
  chats    Chat[]

  @@unique([email])
}

model Chat {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  name      String
  isGroup   Boolean
  adminId   String
  admin     User     @relation(fields: [adminId], references: [id], onDelete: Cascade)

  members   Member[]
  messages  Message[]

  @@unique([adminId])
}

model Member {
  id       String   @id @default(uuid())
  userId   String
  chatId   String
  joinedAt DateTime @default(now())

  chat  Chat @relation(fields: [chatId], references: [id], onDelete: Cascade)
  user  User @relation(fields: [userId], references: [id])

  @@unique([userId, chatId])
}

model Message {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  content   String
  senderId  String
  chatId    String
  isDeleted Boolean  @default(false)

  chat   Chat @relation(fields: [chatId], references: [id], onDelete: Cascade)
  sender User @relation(fields: [senderId], references: [id])

  @@index([chatId, senderId])
}
